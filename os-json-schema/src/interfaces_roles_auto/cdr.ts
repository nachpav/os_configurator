import { IOSConfigRoleBasic } from "../interfaces_os-config";

/**
* CDR (cdr)
* ```
* Обработчик событий, поставляющий их из брокера сообщений функциональной роли sq в потоковую БД внутри одного сайта.
* Имеет прямой доступ к реляционным потоковым БД всех доменов вне зависимости от того, на каких сайтах они обслуживаются.
* ```
* https://dev01.oktell.ru/docs/r/develop/configuration/roles/cdr.html
*/
export interface IOSConfigRoleCdr extends IOSConfigRoleBasic {
  /** 
   *```
   * Тип функциональной роли. Возможные значения: "cdr". 
   *```
   */
  roletype: "cdr"

  /** 
   *```
   * Алиас сетевого интерфейса сервера, на котором будет происходить внутреннее взаимодействие функциональных ролей между собой. 
   *```
   */
  iface: string

  /** 
   *```
   * Строки подключения к ферме серверов PostgreSQL событийных потоковых БД доменов (cdr).
   * Формат строки подключения: "alias://pgdb_strings/<ALIAS_NAME>", где <ALIAS_NAME> – конкретный алиас конфигурации из раздела pgdb_strings.
   * Перечисление в списке нескольких строк подключения обеспечивает резервный доступ к ферме серверов БД – если подключение через первую строку не удается, производится подключение через вторую и т.д. 
   *```
   */
  dbconnstrings: string[]

  /** 
   *```
   * Номер группы.
   * Горизонтальное масштабирование внутри сайта не поддерживается. Все экземпляры функциональной роли на сайте должны иметь одинаковое значение.
   * Целое число от 1 до 9999999. 
   *```
   *  @TJS-integer
   *  @TJS-minimum 1
   *  @TJS-maximum 9999999
   */
  group: number

  /** 
   *```
   * Порядок экземпляра функциональной роли в рамках группы.
   * Определяет в каком порядке будет происходить перетекание в режиме Active-Passive. 
   *```
   */
  order: number

  /** 
   *```
   * Период проверки наличия звонков с таймаутом в БД, в секундах.
   * Минимальное значение: 30. 
   *```
   * default: 3600
   *  @TJS-minimum 30
   */
  checktoutcallsinterval?: number

  /** 
   *```
   * Cписок доменных очередей, на которые подписан экземпляр функциональной роли. 
   *```
   * default: empty
   */
  domainsubscrqlist?: string[]

  /** 
   *```
   * Время, прошедшее с момента получения события callevents.dlg_start, после которого звонок считается завершенным и автоматически генерируется событие callevents.dlg_dead, в секундах.
   * Минимальное значение: 3600. 
   *```
   * default: 7200
   *  @TJS-minimum 3600
   */
  istoutcallsinterval?: number

  /** 
   *```
   * Максимальное количество событий которое функциональная роль может получить со всех очередей за одну итерацию.
   * Минимальное значение: 10. 
   *```
   * default: 5000
   *  @TJS-minimum 10
   */
  maxevents?: number

  /** 
   *```
   * Таймаут на запросы в БД в мс.
   * Минимальное значение: 1000. 
   *```
   * default: 1000
   *  @TJS-minimum 1000
   */
  querytout?: number

  /** 
   *```
   * Список очередей на которые подписан экземпляр функциональной роли 
   *```
   * default: empty
   */
  subscrqlist?: string[]

}