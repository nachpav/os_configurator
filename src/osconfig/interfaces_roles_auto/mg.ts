import { IOSConfigRoleBasic } from "../interfaces_os-config";

/**
* Media Gate (mg)
* ```
* Медиа-шлюз, замыкающий медиа-потоки.
* Управляется функциональной ролью mgc по протоколу MEGACO. Каждый медиа-контекст управляется одной из функциональных ролей: b2b, conf, ivr, esg.
* ```
* https://dev01.oktell.ru/docs/r/develop/configuration/roles/mg.html
*/
export interface IOSConfigRoleMg extends IOSConfigRoleBasic {
  /** 
   *```
   * Тип функциональной роли. Возможные значения: "mg". 
   *```
   */
  roletype: "mg"

  /** 
   *```
   * Алиас сетевого интерфейса сервера, на котором будет происходить внутреннее взаимодействие функциональных ролей между собой. 
   *```
   */
  iface: string

  /** 
   *```
   * Идентификатор функциональной роли.
   * Уникален для всей системы, независимо от сайта или сервера. Не подлежит изменению.
   * Целое число от 1 до 9999. 
   *```
   *  @TJS-minimum 1
   *  @TJS-maximum 9999
   *  @TJS-uniqueItems
   *  @TJS-integer
   */
  roleid: number

  /** 
   *```
   * Признак выделения функциональной роли в отдельную ноду. 
   *```
   */
  separate: boolean

  /** 
   *```
   * Группа mgc, к которой принадлежит текущий mg.
   * Совпадает с параметром group в функциональных ролях с типом mgc. 
   *```
   * default: 0
   */
  mgcgroup?: number

  /** 
   *```
   * Локальный порт TCP MEGACO.
   * Стандартный порт: 2944. 
   *```
   *  @TJS-integer
   */
  port: number

  /** 
   *```
   * Список используемых кодеков. Ограничивает использование кодеков, выдаваемых вовне.
   * Возможные значения: "GSM", "PCMA", "PCMU", "G722", "G729", "G726-16", "G726-24", "G726-32", "G726-40", "opus", "speex", "G729a", "VP8", "VP9", "H264", "H263", "H263-1998", "H263-2000". По умолчанию: не задано, используются все поддерживаемые кодеки. 
   *```
   */
  codecs?: string[]

  /** 
   *```
   * Алиас каталога на сервере для хранения сертификатов (файлы server.crt и server.key).
   * Если путь не указан, то поиск сертификатов осуществляется в каталоге "/usr/lib/rostell/rostell_sip/priv/ssl" 
   *```
   * default: empty
   */
  certdir?: string

  /** 
   *```
   * Пароль для расшифровки файла секретного ключа сертификата. 
   *```
   * default: empty
   */
  keypass?: string

  /** 
   *```
   * Признак сохранения записей разговоров. 
   *```
   * default: true
   */
  domgrecordcalls?: boolean

  /** 
   *```
   * Алиас каталога на сервере для размещения записей разговоров. 
   *```
   * default: /var/lib/rostell/files/records
   */
  mgrecordcalls?: string

  /** 
   *```
   * Алиас сетевого интерфейса сервера, который будет использоваться для обслуживания RTP-трафика.
   * По умолчанию используется интерфейс из поля iface.
   * Не допустимо указание одновременно с aliases и termportranges. 
   *```
   * default: empty
   */
  rtpiface?: string

  /** 
   *```
   * Диапазон RTP портов, которые будет использовать данный экземпляр функциональной роли на сетевом интерфейсе.
   * Формат: "PortFrom:PortCnt", где PortFrom – начальное значение порта, PortCnt – количество портов.
   * Если не задано используется диапозон "10000:20000".
   * Не допустимо указание одновременно с aliases и termportranges. 
   *```
   * default: empty
   */
  termportrange?: string

  /** 
   *```
   * Aлиасы интерфейсов, для работы функциональной роли на нескольких интерфейсах.
   * Формат записи алиаса для интерфейса:
   * {"key":"Alias", "value":"Interface"}
   * В приложении редактора конфигураций задаются путем выбора интерфейсов, алиасы подставляются автоматически.
   * Не допустимо указание одновременно с rtpiface и termportrange. 
   *```
   * default: empty
   */
  aliases?: { key: string, value: string }[]

  /** 
   *```
   * Диапазон RTP портов, которые будет использовать функциональная роль, для работы на нескольких интерфейсах.
   * Задается для каждого алиаса отдельно.
   * Формат записи диапозона портов:
   * {"key":"AliasName","value":"PortFrom:PortCnt"}
   * где AliasName – имя интерфейса, PortFrom – начальное значение порта, PortCnt – количество портов.
   * По умолчанию для каждого алиаса будет установлено: "10000:20000"
   * Не допустимо указание одновременно с rtpiface и termportrange. 
   *```
   * default: empty
   */
  termportranges?: { key: string, value: string }[]

  /** 
   *```
   * Алиас каталога на сервере для размещения лог-файлов.
   * По умолчанию: "/var/lib/rostell/_workdir/<NODE_NAME>/log/mg". 
   *```
   * default: empty
   */
  logrootpath?: string

  /** 
   *```
   * Уровень логирования.
   * Возможные значения:
   * timer, call, events, proto, error, warning, trans, async, stream, fax, net, media-flow, rtp-flow, rtp, session, stat, flag1, flag2, flag3, flag4, flag5, flag6, flag7, flag8.
   * logmaxsize, int, 2000, "Максимальный суммарный размер лог-файлов за один день, в МБ. При достижении лимита запись логов останавливается в ожидании удаления, в том числе автоматического по времени. 
   *```
   * default: ["error", "warning"]
   */
  logtrace?: string[]

  /** 
   *```
   * Максимальный размер одного лог-файла, в МБ. 
   *```
   * default: 200
   */
  logpartsize?: number

  /** 
   *```
   * Выключатель логирования статистики на основе пакетов RTCP. 
   *```
   * default: false
   */
  rtcpmonitor?: boolean

  /** 
   *```
   * Интервал сброса данных из кэша в исходный файл записи разговора, в миллисекундах.
   * Минимальное значение: 500. 
   *```
   * default: 5000
   *  @TJS-minimum 500
   */
  recdumpinterval?: number

}