import { IOSConfigRoleBasic } from "../interfaces_os-config";

/**
* Server Queue Message Broker (sq)
* ```
* Брокер сообщений о событиях в системе.
Обеспечивает прием и сохранение данных (до превышения лимита) без нарушения порядка поступления. Предоставляет доступ к хранилищу событий только указанным в конфигурации подписчикам (функциональным ролям-обработчикам, например cdr).

Временно и ограниченно хранит данные о событиях, сгенерированных на текущем сайте.
Резервируется в режиме Active-Passive. Масштабируется разделением по очередям.
* ```
* https://dev01.oktell.ru/docs/r/develop/configuration/roles/sq.html
*/
export interface IOSConfigRoleSq extends IOSConfigRoleBasic {
  /** 
   *```
   * Тип функциональной роли. Возможные значения: "sq".
   *```
   */
  roletype: "sq"

  /** 
   *```
   * Алиас сетевого интерфейса сервера, на котором будет происходить внутреннее взаимодействие функциональных ролей между собой. 
   *```
   */
  iface: string

  /** 
   *```
   * Номер группы.
   * В рамках горизонтального масштабирования функциональная роль может быть разделена на несколько групп на сайте, в каждой из которых активен только один экземпляр, остальные зарезервированы.
   * Ответственность между группами разделяется по хеш-суммам ключей сохраняемых данных. Все функциональные роли одной группы должны иметь одинаковую ответственность.
   * Расчет хеш-сумм производится автоматически по внутреннему алгоритму с равномерно-случайным распределением.
   * Целое число от 1 до 9999999. 
   *```
   *  @TJS-integer
   *  @TJS-minimum 1
   *  @TJS-maximum 9999999
   */
  group: number

  /** 
   *```
   * Порядок экземпляра функциональной роли в рамках группы.
   * Определяет в каком порядке будет происходить перетекание в режиме Active-Passive. 
   *```
   */
  order: number
  /**
   * ```
   * Список доменных очередей в рамках экземпляра функциональной роли, для каждой очереди указывается список паттернов которые она принимает и максимальная длина очереди в количестве блоков по 100к. Возможные паттерны:
   * 
   * Формат описателя очереди
   * {"key": "queueNum", "patterns":"p1,...,pN"}
   * Варианты паттернов https://dev01.oktell.ru/docs/r/develop/configuration/roles/sq.html#subtable_2
   * ```
   * default: empty
   */
  domainqlist: { key: string, patterns: string }[]

  /**
   * ```
   * Список очередей в рамках экземпляра функциональной роли, для каждой очереди указывается список паттернов которые она принимает и максимальная длина очереди в количестве блоков по 100к
   * 
   * Формат описателя очереди
   * {"key": "queueNum","patterns":"p1,...,pN"}
   * Список паттернов https://dev01.oktell.ru/docs/r/develop/configuration/roles/sq.html#subtable_1
   * ```
   * default: empty  
   */
  qlist: { key: string, patterns: string }[]
}